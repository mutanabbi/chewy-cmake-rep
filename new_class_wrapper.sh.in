#!/bin/sh
# Copyright 2004-2013 by Alex Turbov <i.zaufi@gmail.com>
#
# Helper to generate class skeletons
#
#
# TODO Add parameters to control what to generate: header only and/or implementation
#
# TODO Guess `subdir' from `ns' and vise versa if smth absent
#
# TODO Add parameter to control filename if latter isn't same as a class name... or maybe
#      better to generate a file w/o predefined class if `fn' specified instead of `class'
#
# TODO Generate result files into a temporary directory first, then move to the destination
#      with `mv -i` option to avoid files override for in-source builds.
#

source "@_DSGT_BASE_DIR@/output_helpers.sh"

show_help()
{
    einfo "Use 'make new-class class=ClassName subdir=path/from/src/root [ns=namespaces::list]'"
    einfo "Where: "
    einfo "  class  -- class name to generate skeletons for"
    einfo "  subdir -- dir to put generated sources to (relative to project root)"
    einfo "  ns     -- namespaces to put generated class into"
    einfo "Exmaple: make new-class class=some_class subdir=src/common ns=myspace::common"
}

if [ -z "$class" ]; then
    eerror "No class name provided"
    show_help
    exit 1
fi
if [ -z "$subdir" ]; then
    eerror "No subdir argument provided"
    show_help
    exit 1
fi

# Form a filename using a class name provided
case "x@NAMING_STYLE@" in
xCamel)
    transformed_name=`echo $class | LC_ALL=C sed -e 's,\([A-Z]\),_\L\1,g' -e 's,^_,,'`
    ;;
*)
    # No filename transform required
    transformed_name="$class"
    ;;
esac

# Ok. Lets work!
ebegin "Generate class skeleton files for $class: $transformed_name.@SKELETON_IMPL_EXT@ and $transformed_name.@SKELETON_HEADER_EXT@"
rf="@CMAKE_BINARY_DIR@/$transformed_name.def"
# Generate response file for autogen
echo "autogen definitions @CMAKE_BINARY_DIR@/class.tpl;" > $rf \
  && echo "subdir=$subdir;" >> $rf \
  && echo "guard_base=`echo "$subdir" | sed -e 's,/,__,g' -e 's,[^0-9A-Za-z],_,g'`;" >> $rf \
  && echo "classname=$class;" >> $rf \
  && echo "use_pragma=@USE_PRAGMA_ONCE@;" >>$rf \
  && echo "no_license=@NO_LICENSE@;" >>$rf \
  && echo "project=@PROJECT_NAME@;" >> $rf \
  && echo "filename=$transformed_name;" >> $rf \
  && ( test -n "$ns" && echo "$ns" | awk -F '::' -f '@_DSGT_BASE_DIR@/mknslist.awk' >> $rf \
      || ( test -f '@CMAKE_BINARY_DIR@/tpl_defaults.def' && cat '@CMAKE_BINARY_DIR@/tpl_defaults.def' >> $rf ) \
      ) \
  && @AUTOGEN_EXECUTABLE@ -L '@CMAKE_SOURCE_DIR@' -L '@CMAKE_BINARY_DIR@' $rf
result=$?
eend $result
test "$result" = "0" || exit 1

if [ '@CMAKE_BINARY_DIR@' != '@CMAKE_SOURCE_DIR@' ]; then
    # Move generated files from CMAKE_BINARY_DIR to desired subdir (if exists)
    dst=`test -d "@CMAKE_SOURCE_DIR@/$subdir" && echo "@CMAKE_SOURCE_DIR@/$subdir" || echo '@CMAKE_SOURCE_DIR@'`
    ebegin "Move generated files to $dst"
    mv -i "@CMAKE_BINARY_DIR@/$transformed_name.@SKELETON_HEADER_EXT@" "@CMAKE_BINARY_DIR@/$transformed_name.@SKELETON_IMPL_EXT@" $dst
    eend $?
fi

# Cleanup
ebegin 'Cleanup'
rm -f $rf
eend $?
